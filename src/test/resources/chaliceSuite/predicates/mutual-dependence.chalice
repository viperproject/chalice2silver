class Cell {
  var value: int;
  var next: Cell;
  
  predicate p { q }
  predicate q { acc(value) && acc(next) && (next != null ==> next.p) }
  
  method test()
    requires acc(this.*)
  {
    value := 1
    next := null
    fold q
    fold p
    call void()
    assert unfolding p in unfolding q in value == 1 // ERROR: should not verify
  }
  
  method void()
    requires p
    ensures p
  {}
  
}
