// https://bitbucket.org/mschwerhoff/syxc-npm/issue/2

/* 2012-11-19 Malte:
 *    This test file is based on issue 2, but has been extended while
 *    changing the implementation of waitlevels in Syxc.
 */

class Test {
  method test11()
  {
    assert holds(this) /* @Error 410 */
  }
  
  method test01()
    requires acc(mu)
    requires mu == lockbottom
  {
    assert !holds(this)
    share this
    assert !holds(this)
  }
  
  method test02() /* @Error 340 */
    requires acc(mu)
    requires mu == lockbottom
  {
    share this
    assert !holds(this)
    acquire this
  }
  
  method test03() {
    var t: Test := new Test
    assert !holds(t)
    call goodCallee(t)
    assert false /* @Error 410 */
  }
  
  method goodCallee(t: Test)
    requires t != null && acc(t.mu)
    requires t.mu == lockbottom
    ensures holds(t)
    lockchange t
  {
    share t
    acquire t
  }
  
  method test04() {
    var t: Test := new Test
    call badCallee(t)

    assert false
      /* Holds, because the insufficient lockchange clause of badCallee allows
       * us to retain the assumption !holds(t), while the postcondition of
       * badCallee gives us the contradicting assumption holds(t).
       */
  }
  
  method badCallee(t: Test) /* @Error 340 */
    requires t != null && acc(t.mu)
    requires t.mu == lockbottom
    ensures holds(t)
  {
    share t
    acquire t
  }

  /* Tests to ensure that we don't assume too much. */
  
  method test10() {
    var t: Test := new Test
    assert !holds(t)
    call overApproxCallee(t)
    assert holds(t)  /* @Error 410 */
  }
  
  method overApproxCallee(t: Test)
    requires t != null && acc(t.mu)
    requires t.mu == lockbottom
    ensures acc(t.mu)
    lockchange t
  {}
  
  method test05(t: Test)
    requires t != null
  {
    assert holds(t) /* @Error 410 */
  }
  
  method test06(t: Test)
    requires t != null
  {
    assert !holds(t) /* @Error 410 */
  }
}