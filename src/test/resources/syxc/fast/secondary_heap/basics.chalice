class Test01 {
  var f: int
  var g: int

  predicate P { acc(f) }
  predicate Q { rd(f) }

  method consumeP()
    requires P
  {}

  method consumeHalfP()
    requires acc(P, 50)
  {}

  method consumeQ()
    requires Q
  {}



  method test01()
    requires acc(f) && f == 0
  {
    fold P
    assert f > -1
    call consumeHalfP()
    assert f > -2
    call consumeHalfP()
    assert f > -3 /* @Error 430 */
  }

  method test03()
    requires acc(f)
  {
    fold P
    assert rd(f) /* @Error 430 */
  }

  method test02()
    requires acc(f) && f == 0
  {
    fold Q
    call consumeQ()
    assert f > -1
  }

  method test04()
    requires acc(f)
  {
    f := 10

    fold P
    assert f == 10

    call consumeP()
    assert f == 10 /* @Error 430 */
  }
}