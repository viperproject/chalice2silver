// @IgnoreFile
// Counting permissions (epsilons) are currently not supported in Syxc
// due to changes made when introducing the tuple representation (w, r)
// of permissions as part of the work on immutability.

// syxc-parameters --disableDeadlockChecks

/* fails 						-> must always fail
 * succeeds 				-> must always succeed
 * succeeds_if_ddc 	-> should only succeed with --disableDeadlockChecks
 */

class Cell {
	invariant acc(x) && x > 0
	var x: int
}

class ShareTests {
	method fails1() {
		var c: Cell := new Cell
		share c	/* @Error 1610 */
	}
	
	method succeeds1() {
		var c: Cell := new Cell
		c.x := 1
		share c
	}
	
	method fails2() {
		var c: Cell := new Cell
		c.x := 1
		share c
		share c /* @Error 1142 */
	}
}

class AcquireTests {
	method succeeds_if_ddc1(c: Cell)
		requires c != null && !holds(c)
	{
		acquire c
		assert c.x >= 1
	}
	
	method fails2(c: Cell)
		requires c != null && !holds(c)
	{
		acquire c
		acquire c /* @Error 1245 */
		assert rd(c.x, 2) // Must not hold!
	}
	
	method succeeds_if_ddc2() {
		var c1: Cell := new Cell
		var c2: Cell := new Cell
		c1.x := 1
		c2.x := 1
		share c1
		share c2
		acquire c2
		acquire c1
		release c2
		release c1
		acquire c1
		acquire c2
	}
}

class ReleaseTests {
	method fails3(c: Cell)
		requires c != null && holds(c) && acc(c.x)
	{
		release c /* @Error 1610 */
	}
	
	method fails4(c: Cell)
		requires c != null && holds(c) && acc(c.x) && c.x > 0
	{
		release c
		release c /* @Error 1346 */
	}
}