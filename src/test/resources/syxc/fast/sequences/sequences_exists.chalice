class ExistsTests {
	method test12()
	{ assert exists i in [0..5] :: 0 < i /* @Fails */ }
	
	method test1()
	{ assert exists i: int :: (0 <= i && i < 5) ==> ([0,1,2,3,4][i] == i) /* @Fails */ }
	
	method test10()	/* Holds in Chalice */
	{ assert exists i: int :: (i in [0..5]) ==> ([0,1,2,3,4][i] == i) /* @Fails */ }
	
	method test11()
	{ assert exists i in [0..5] :: [0,1,2,3,4][i] == i /* @Fails */ }	

	method test2()
	{ assert exists i in [0..5] :: [0..5][i] == i /* @Fails */ }
	
	method test3(k: int)
		requires k > 0
	{ assert exists i in [0..k+1] :: [0..k+1][i] == k /* @Fails */ }
		
	method test4(k: int)
		requires k > 0
	{ assert exists i in [0..|[k]|] :: [k][i] == k /* @Fails */ }
	
	/* Even this fails in both Syxc and Chalice */
	method test13()
	{ assert exists i: int :: (0 < i && i < 5) ==> 3 < i /* @Fails */ }
}