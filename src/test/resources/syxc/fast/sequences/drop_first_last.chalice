/* Producer-Consumer from the Chalice test suite contains a similar
 * method that currently also fails to verify in Syxc. This is most probably
 * due to sequence axiomatisation.
 *
 * Verifies in Chalice.
 *
 * 2011-09-13 MHS:
 *		Does verify, now that Syxc is using the same axioms as Chalice.
 */
class List {
  var contents: seq<int>;

	method dropFirst()
		requires acc(contents) && |contents| > 3
	{
		var cs: seq<int> := contents[1..]
		assert |cs| == |contents| - 1
		assert cs[0] == contents[1]
		assert cs[1] == contents[2]
		assert cs[2] == contents[3]
		assert forall i in [0..|cs|] :: cs[i] == contents[i + 1]
	}
	
	method dropLast()
		requires acc(contents) && |contents| > 3
	{
		var cs: seq<int> := contents[..|contents| - 1]
		assert |cs| == |contents| - 1
		assert cs[0] == contents[0]
		assert cs[1] == contents[1]
		assert cs[2] == contents[2]
		assert forall i in [0..|cs|] :: cs[i] == contents[i]
	}
}