domain GlobalKPermission {
  
  unique function globalK$(): Perm
  
  axiom globalKReadOnly {
    (globalK$() > none) && (write > globalK$())
  }
}

var old$methodPermission: Perm

var joinable$: Bool

var Ap$: Ref

var BP$Ap$: Set[Ref]

var Aq$: Ref

var Cf$: Ref

var BP$Cf$: Set[Ref]

var par$Bm$this$_2: Ref

var par$Bm$k$: Perm

var par$Bm$x: Ref

predicate A$MonitorInvariant(this$: Ref) {
  true
}

predicate B$MonitorInvariant(this$_1: Ref) {
  true
}

predicate C$MonitorInvariant(this$_3: Ref) {
  true
}

method Bm$(this$_2: Ref, k$: Perm, x: Ref)
  requires this$_2 != null
  requires k$ > none
  requires write > k$
  requires this$_2.BP$Cf$ setminus x.Ap$.Aq$.BP$Cf$ == this$_2.BP$Cf$
  requires acc(x.Ap$.BP$Ap$, 50 / 100) && acc(x.BP$Ap$, wildcard)
  requires x.Ap$.BP$Ap$ == x.BP$Ap$
{
  var n$: Ref
  assert this$_2.BP$Cf$ == this$_2.BP$Cf$
  assert x.Ap$.BP$Ap$ == x.BP$Ap$
}
