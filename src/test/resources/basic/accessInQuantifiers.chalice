//:: IgnoreFile(/Chalice2Silver/issue/62/)

class A
{
  var x:int
  
  predicate p { acc(x) }
  
  method m()
    requires (forall o:seq<A> :: acc(x))
    //:: UnexpectedOutput(chalice2silver.error, /chalice2silver/issue/15/)
    requires (sum o in nil<A> :: o.x) == 0
    //:: UnexpectedOutput(chalice2silver.error, /chalice2silver/issue/15/)
    requires (max o : empty<A> :: o.x) == 0
    ensures (forall o:A :: p)
  {
    assert (forall a:int :: (forall b:A :: a>0 ==> acc(b.x)))
    assert (forall a:int :: (forall b:A :: a>0 ==> b.p))
    assume (forall o:A :: acc(x))
    assume (forall a:int :: (forall b:A :: a>0 ==> b.p))
  }
}
