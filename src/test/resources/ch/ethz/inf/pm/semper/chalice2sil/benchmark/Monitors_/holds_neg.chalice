class Cell { var x: int }

class Test {
	var c: Cell
	
	method test1()
		requires acc(c) && c != null && rd holds(c)
	{ assert !holds(c) }
	
	method test2()
		requires acc(c) && c != null && holds(c)
	{ assert ! rd holds(c) }
	
	method test3()
		requires acc(c) && c != null && rd holds(c) && !holds(c)
	{
		assert !holds(c)
		assert rd holds(c) /* @Fails */
			/* Should hold and does so in Chalice.
			 * Currently fails because
			 *   holds(e) --> holds(e, W)
			 *   rd holds(e) --> holds(e, R)
			 * and
			 *   ! holds(e) --> holds(e, N)
			 *   ! rd holds(e) --> holds(e, N)
			 * Thus, 'requires !holds(c)' "overwrites" 'requires rd holds(c)' and
			 * the second assertion fails.
			 */
	}
}