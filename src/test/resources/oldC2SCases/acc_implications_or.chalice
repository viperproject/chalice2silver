//:: ExpectedOutput(typechecker.error)
class Test {
	var m: int
	var n: int
	
	function f(a: int): int
		requires acc(m)
	{ a + m }
	
	function g(a: int): int
		requires a > 0
	{ a * a }
	
	function h(a: int): int
		requires acc(n)
	{ a + n }
	
	method implTest(y: int)
		requires acc(n) || acc(m)
		requires y == 0 ==> f(y) == m
		requires y == 0 && acc(m) ==> f(y) == m
		requires y == 0 ==> acc(m) && f(y) == m
	{
		// var i: int := f(y)
		if (y == 0) {
			var i: int := f(y)
				/* OK */
		}
	}
	
	method implTest1(y: int)
		requires (y > 0 ==> acc(m)) ==> acc(n)
	{}
	
	method implTest2(y: int)
		requires acc(m)
		requires f(y) == 0 ==> acc(n) && h(n) == 2*n
	{}
	
	method implTest3(y: int)
		requires acc(m)
		requires y < 0
		requires g(-y) > 0 ==> f(y) == 0 ==> acc(n) && h(n) == 2*n
	{}
	
	method implTest4(b1: bool, b2: bool, b3: bool, x: int)
    requires ((b1 && b2) ==> x > 0) && b3 && (b1)
    requires ((b1 && b2) ==> x > 0 && acc(n)) && b3 && (x > 0 ==> ((b2 || b3) && acc(m) && f(x) == 0))
	{}
	
	method equivTest1(b1: bool, b2: bool, b3: bool)
		requires b1 <==> (b2 || b3)
		requires b1 <==> acc(m)
		requires acc(n) <==> acc(m)
	{}
}