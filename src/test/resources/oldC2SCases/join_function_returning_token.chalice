class Cell {
  var tk: token<Cell.noop>

  method noop() {}

  function get1(): token<Cell.noop>
    requires rd(tk)
  { tk }

  function get2(b: bool): token<Cell.noop>
    requires rd(tk)
  { b ? tk : tk }

  function get3(b: bool): token<Cell.noop>
    requires rd(tk)
  { b ? get1() : get1() } /* Chalice: Spurious termination error */

  method test(a: int)
    requires acc(tk)
    ensures acc(tk)
  {
    // fork this.tk := noop() /* Parse error */
    fork tk := noop() /* Apparently creates a new local variable shadowing
                       * this.tk
                       */
    this.tk := tk
    //:: UnexpectedOutput(assignment.failed:insufficient.permission, /Carbon/issue/50/)
    join get1()

    fork tk := noop()
    this.tk := tk
    //:: UnexpectedOutput(assignment.failed:insufficient.permission, /Carbon/issue/50/)
    join get2(a > 0)

    fork tk := noop()
    this.tk := tk
    //:: UnexpectedOutput(assignment.failed:insufficient.permission, /Carbon/issue/50/)
    join get3(a > 0)
  }
}
