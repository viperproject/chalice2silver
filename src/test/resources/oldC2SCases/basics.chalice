class Foo {
  method m1() {
    var a: int
    
    a := 0
    assert a == 0
    assert a != 1
    
    a := 1
    assert a < 2
    
    a := 2
	//:: ExpectedOutput(assert.failed:assertion.false)
    assert false
    assert a > 2
  }
  
  method m2(b1: bool) returns (b2: bool)
    requires b1 == false
    ensures b2 != b1
  {
    b2 := !b1
  }
  
  method m2a(x: int, y: int)
    requires x > 0 && y > 0
    ensures x * y > 0
    ensures x + y > 0
	//:: ExpectedOutput(postcondition.violated:assertion.false)
    ensures x - y > 0
  {}

	var x: int
  
  method m3()
    requires rd(x)
    ensures rd(x)
  {}
  
  method m4()
    requires acc(x)
    ensures rd(x)
  {}
  
  method m5(n: int)
    requires rd(x)
	//:: ExpectedOutput(postcondition.violated:insufficient.permission)
    ensures acc(x)
  {}
  
  method m6()
    requires acc(x)
  {
    x := 1
  }
  
  method m7()
    requires rd(x)
  {
     //:: ExpectedOutput(assignment.failed:insufficient.permission)
    x := 1 /* @Error 630 */
  }
  
  method m8()
    requires rd(x)
  {
    var y := x
  }
  
  method m9()
  {
    //:: ExpectedOutput(assignment.failed:insufficient.permission)
    var y := x
  }
  
  method m11()
    requires rd(x)
  {
    var y := x
    assert y == x
  }
  
  method m10() returns (y: int)
    requires rd(x)
    ensures rd(x)
    ensures y == x
  {
    y := x
    assert y == x
  }
}