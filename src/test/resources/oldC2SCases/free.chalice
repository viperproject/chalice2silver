class Pair {
  var x: int
  var y: int
}

class Test {
  var p: Pair
  
  method fail1(a: int, b: int)
    requires acc(p) && p != null
    requires acc(p.x) && acc(p.y)
    requires acc(p.mu)
  {
    p.x := a
	//:: ExpectedOutput(chalice2sil.error)
    free p
    assert p.x == a /* @Error 430 */
  }
  
  method fail2()
    requires acc(p) && p != null
    requires acc(p.x) && acc(p.y)
  {
    //:: ExpectedOutput(chalice2sil.error)
    free p /* @Error 630 */
  }

  method succeed1()
    requires acc(p) && p != null
    requires acc(p.x) && acc(p.y)
    requires acc(p.mu)
  { 
    //:: ExpectedOutput(chalice2sil.error)
    free p 
  }
}