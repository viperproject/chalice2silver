class LocalVars {
	method extraDecl(x: bool, y: bool, z: bool) returns (r: bool)
		requires x == y
		requires z != x
		ensures r == true
	{
		var b1: bool

		b1 := x && y
		r := b1 || z
	}
	
	method decl(x: bool, y: bool, z: bool) returns (r: bool)
		requires x == y
		requires z != x
		ensures r == true
	{
		var b1: bool := x && y
		r := b1 || z
	}
	
	method multiple(x: bool, y: bool, z: bool) returns (r: bool)
		requires x == y
		requires z != x
		ensures r == true
	{
		var b1: bool := x && y
		var b2: bool := x || y
		
		r := b1 == b2
	}
	
	method failDecl(x: bool, y: bool, z: bool) returns (r: bool)
		requires x == y
		requires z != x
		//:: ExpectedOutput(postcondition.violated:assertion.false)
		ensures r == false
	{
		var b1: bool := x && y
		r := b1 || z
	}
	
	method failMultiple(x: bool, y: bool, z: bool) returns (r: bool)
		requires x == y
		requires z != x
		//:: ExpectedOutput(postcondition.violated:assertion.false)
		ensures r == false
	{
		var b1: bool := x && y
		var b2: bool := x || y
		
		r := b1 == b2
	}
}