class RawCell {
	var x: int
	
	method set_(v: int)
		requires acc(x)
		ensures acc(x) && get() == v
	{ x := v }
	
	function get(): int
		requires acc(x)
	{ x }
}

class TestRawCell {
	method testCell(a: int, c: RawCell)
		requires c != null && acc(c.x)
		ensures acc(c.x) && c.get() > 0
	{
		if (a == 0) {
			call c.set_(a + 1)
		} else if (a < 0) {
			call c.set_(-a)
		} else {
			call c.set_(a)
		}
	}
	
	method testNewCell(a: int) returns (c: RawCell)
		ensures c != null && acc(c.x) && c.get() > 0
	{
		c := new RawCell

		if (a == 0) {
			call c.set_(a + 1)
		} else if (a < 0) {
			call c.set_(-a)
		} else {
			call c.set_(a)
		}
	}
	
	method failTestNewCell(a: int) returns (c: RawCell)
		ensures c != null && acc(c.x) && c.get() > 0
	{
		c := new RawCell

		if (a < 0) {
			call c.set_(-a)
		} else {
			call c.set_(a)
		}

		//:: ExpectedOutput(assert.failed:assertion.false)
		assert c != null && acc(c.x) && c.get() > 0
	}
}