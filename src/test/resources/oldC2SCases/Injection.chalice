//:: IgnoreFile(/silicon/issue/115/)

/* VSTTE 2010 Verification Competition, Challenge 2
 *
 * Invert an injective array A on N elements in the subrange from 0 to
 * N − 1, i.e., the output array B must be such that 
 * B[A[i]] = i for 0 <= i < N.  
 * You can assume that A is surjective.  
 *
 * Properties: Show that the resulting array is also injective. For
 * bonus points, you can demonstrate other properties, e.g., that A and B
 * are inverses.
 *
 * Peter Müller, 19 September 2011.
 *
 * This solution is an almost literal translation of Rustan Leino's solution
 * in Dafny. All the essential ideas, especially the use of function
 * inImage to provide good triggers as well as the local assertion
 * are taken from that solution. See the Dafny test case for a
 * detailed explanation.
 * We encoded arrays as sequences because Chalice does not have arrays.
 */

class Injection {

  function inImage(i: int): bool { true }

  method Invert(A: seq<int>) returns (B: seq<int>)
		// Array contains only elements from the interval [0.. |A|]
    requires forall j in [0..|A|] :: 0 <= A[j] && A[j] < |A|;
    // injectivity: each element in the array is unique
    requires forall j in [0..|A|] :: (forall k in [j+1..|A|] :: A[j] != A[k]);
    // surjectivity: each element from [0..|A|] is included
    requires forall v in [0..|A|] :: inImage(v) ==> (exists j in [0..|A|] :: A[j] == v);

    ensures |A| == |B|;
    ensures (forall k in [0..|A|] :: 0 <= B[k] && B[k] < |A|);
    // injectivity
    ensures forall j in [0..|B|] :: (forall k in [j+1..|B|] :: B[j] != B[k]);
    // A and B are each other's inverses
    ensures (forall k in [0..|A|] :: B[(A[k])] == k && A[(B[k])] == k);
  {
    B := A;

    var i: int;
    i := 0;
		
    while(i < |A|)
      invariant 0 <= i && i <= |A|;
      invariant |A| == |B|;
      invariant forall k in [0..i] :: B[(A[k])] == k;
    {
      B := B[..(A[i])] ++ [i] ++ B[A[i]+1..];
      i := i + 1;
    }
		
    assert forall j in [0..|A|] ::
			inImage(j) ==> (0 <= B[j] && B[j] < |A| && A[(B[j])] == j);
  }
}