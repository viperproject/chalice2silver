// @Ignore Match error on IfThenElseTerm, see silicon issue 3
class Ternary {
	method ternary(x: int, y: int) returns (r: int)
		requires x != y
		ensures r == x ==> x*y > 0
		ensures r == y ==> x*y <= 0
	{ r := x*y > 0 ? x : y }
	
	method ternaryInPre(x: int, y: int) returns (r: int)
		requires x % 2 == 0 ? y % 2 == 0 : y % 2 == 1
		ensures r % 2 == 0
	{ r := x + y }
	
	method ternaryInPost(x: int, y: int) returns (r: int)
		ensures (x % 2 == 0 && y % 2 == 0) ? r % 2 == 0 : (r % 2 == 0 || r % 2 == 1)
	{ r := x + y }
	
	method failTernary1()
		ensures 1 == 2 /* @Error 310 */
	{ var a: int := 1 == 2 ? 1 : 2 }
	
	method failTernary2(x: int, y: int) returns (r: int)
		// requires x != y
		ensures r == x <==> x*y > 0 /* @Error 310 */
	{ r := x*y >= 0 ? x : y }
	
	method failTernaryInPre(x: int, y: int) returns (r: int)
		requires x % 2 == 0 ? y % 2 == 1 : y % 2 == 0
		ensures r % 2 == 0 /* @Error 310 */
	{ r := x + y }
	
	method failTernaryInPost(x: int, y: int) returns (r: int)
		ensures (x % 2 == 0 && y % 2 == 0) ? r % 2 == 0 : r % 2 == 1 /* @Error 310 */
	{ r := x + y }
}