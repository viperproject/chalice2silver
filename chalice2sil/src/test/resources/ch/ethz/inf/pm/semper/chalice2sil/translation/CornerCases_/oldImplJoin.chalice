 class Cell {
    var f : int;
    var cell : Cell;
    
    method swapF(newF : int) returns(oldF : int) 
        requires acc(f,rd) && (f > 0 ==> (rd(cell) && cell != null && acc(cell.f)))
        ensures  rd(f) && (f > 0 ==> (rd(cell) && cell != null && acc(cell.f) && oldF == old(cell.f) && cell.f == newF))
    {
        if(f > 0){
            oldF := cell.f;
            cell.f := newF;
        } else {
            oldF := newF;
        }
    }
 }
 
 class Main {
    
    method main(){
        var c1 : Cell;
        var c11 : Cell;
        c1 := new Cell;
        c11 := new Cell;
        c1.f := 5;
        c1.cell := c11;
        c11.f := 3;
        c11.cell := null;
        
        var c2 : Cell;
        c2 := new Cell;
        c2.f := 0;
        c2.cell := null;
        
        call f11 := c1.swapF(7);
        assert f11 == 3;
        
        call f2 := c2.swapF(9);
        assert f2 == 9;
    }   
 }