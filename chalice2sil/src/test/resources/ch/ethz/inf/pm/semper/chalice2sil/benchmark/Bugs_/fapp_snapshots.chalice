// @IgnoreFile
// FieldAccess in permission expressions is currently not supported
// in Syxc due to changes made when introducing the tuple
// representation (w, r) of permissions as part of the work on immutability.

/* There was a severe bug in the Z3-encoding of symbolic function 
 * applications such that the snapshot of the f-app was completely ignored
 * and therefore f-app path conditions for a function f remained valid 
 * for all applications of f, regardless of the covered snapshot.
 */
class Test {
	var x: int
	var y: int
	
	predicate V { acc(x) }
	
	function f(a: int): int
		requires rd(x)
	{ x + a }
	
	method fail1(a: int)
		requires acc(x)
		requires f(a) == 0
		ensures acc(x)
		ensures f(a) == 0 /* @Error 310 */
	{ x := -x }
	
	method fail2()
		requires acc(y)
		requires acc(x)
		requires y >= 0
		requires y < 100
		ensures rd(y)
		ensures acc(x, y) /* @Error 130 */
	{}
	
	method succeed2()
		requires acc(y)
		requires acc(x)
		requires y >= 0
		requires y < 100
		ensures rd(y)
		ensures y == old(y)
		ensures acc(x, y)
	{}	
	
	method test(a: int)
		requires acc(x)
		requires f(a) >= 0
		requires f(a) < 100
		ensures rd(x)
		ensures f(a) == old(f(a))
		ensures acc(x, 99 - f(a))
		ensures acc(V, f(a))
	{ fold acc(V, f(a)) }	
	
	method fail3(a: int)
		requires acc(x)
		requires f(a) >= 0
		requires f(a) < 100
		ensures rd(x)
		ensures acc(x, f(a)) /* @Error 130 */
	{}
	
	method succeed3()
		requires acc(x)
		requires x >= 0
		requires x < 100
		ensures rd(x)
		ensures x == old(x)
		ensures acc(x, x)
	{}
}