// @IgnoreFile
// VariableExpr is currently not supported in Syxc due to changes made
// when introducing the tuple representation (w, r) of permissions
// as part of the work on immutability.

/* There was a bug in the implementation of fold and unfold such that
 * variable (un)folding, e.g. unfold acc(V, m), failed because m was
 * evaluated in the scope of V's body where the variable m was not known.
 */
class Test {
	var x: int

	predicate V { acc(x) }
	
	// method succeed1Unfold(m: int)
		// requires m >= 0
		// requires m <= 100
		// requires V
		// ensures acc(V, 100 - m)
		// ensures acc(x, m)
	// { unfold acc(V, m) }

	// method fail1Unfold(m: int)
		// requires m > 0
		// requires m < 100
		// requires V
	// {
		// unfold acc(V, m)
		// assert(acc(V, 100 - m + 1)) /* @Error 430 */
	// }

	// method fail2Unfold(m: int)
		// requires m > 0
		// requires m < 100
		// requires V
	// {
		// unfold acc(V, m)
		// assert(acc(x, m + 1)) /* @Error 430 */
	// }
	
	
	
	method succeed1Fold(m: int)
		requires m >= 0
		requires m <= 100
		requires acc(x)
		ensures acc(x, 100 - m)
		ensures acc(V, m)
	{ fold acc(V, m) }

	// method fail1Fold(m: int)
		// requires m > 0
		// requires m < 100
		// requires acc(x)
	// {
		// fold acc(V, m)
		// assert(acc(V, m + 1)) /* @Error 430 */
	// }

	// method fail2Fold(m: int)
		// requires m > 0
		// requires m < 100
		// requires acc(x)
	// {
		// fold acc(V, m)
		// assert(acc(x, 100 - m + 1)) /* @Error 430 */
	// }
	
	
	
	// method simpleFold1()
		// requires acc(x)
		// ensures acc(V, 50)
	// { fold acc(V, 50) }

	// method simpleFold2()
		// requires acc(x)
		// ensures acc(x, 60)
	// { fold acc(V, 40) }

	// method simpleFold3()
		// requires acc(x)
		// ensures acc(V, 30)
		// ensures acc(x, 70)
	// { fold acc(V, 30) }

	// method foldMultipleEnsures()
		// requires acc(x)
		// ensures acc(V, 25)
		// ensures acc(V, 25)
		// ensures acc(x, 25)
		// ensures acc(x, 25)
	// { fold acc(V, 50) }

	// method simpleUnfold1()
		// requires V
		// ensures acc(V, 80)
	// { unfold acc(V, 20) }

	// method simpleUnfold2()
		// requires V
		// ensures acc(x, 40)
	// { unfold acc(V, 40) }

	// method simpleUnfold3()
		// requires V
		// ensures acc(V, 70)
		// ensures acc(x, 30)
	// { unfold acc(V, 30) }
}